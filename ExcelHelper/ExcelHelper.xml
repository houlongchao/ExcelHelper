<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ExcelHelper.Core</name>
    </assembly>
    <members>
        <member name="T:ExcelHelper.ExportFormatAttribute">
            <summary>
            导出格式化设置
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportFormatAttribute.Format">
            <summary>
            格式化字符串
            </summary>
        </member>
        <member name="M:ExcelHelper.ExportFormatAttribute.#ctor(System.String)">
            <summary>
            导出格式化设置
            </summary>
        </member>
        <member name="T:ExcelHelper.ExportHeaderAttribute">
            <summary>
            导出头设置
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportHeaderAttribute.Name">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportHeaderAttribute.Comment">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportHeaderAttribute.IsAutoSizeColumn">
            <summary>
            是否自动列宽度
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportHeaderAttribute.ColumnWidth">
            <summary>
            列宽度, <see cref="P:ExcelHelper.ExportHeaderAttribute.IsAutoSizeColumn"/>为<c>false</c>时生效
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportHeaderAttribute.IsBold">
            <summary>
            title 是否加粗
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportHeaderAttribute.FontSize">
            <summary>
            title 字体大小
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportHeaderAttribute.ColorName">
            <summary>
            title 颜色
            <br/>颜色受限于Excel驱动框架的颜色系统
            </summary>
        </member>
        <member name="M:ExcelHelper.ExportHeaderAttribute.#ctor(System.String)">
            <summary>
            导出头设置
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:ExcelHelper.ExportIgnoreAttribute">
            <summary>
            导出忽略
            </summary>
        </member>
        <member name="T:ExcelHelper.ExportMapperAttribute">
            <summary>
            导出映射设置
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportMapperAttribute.Actual">
            <summary>
            真实值
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportMapperAttribute.Display">
            <summary>
            显示值
            </summary>
        </member>
        <member name="M:ExcelHelper.ExportMapperAttribute.#ctor(System.Object,System.String)">
            <summary>
            导出映射设置
            </summary>
            <param name="actual">真实值</param>
            <param name="display">显示值</param>
        </member>
        <member name="T:ExcelHelper.ExportMapperElseAttribute">
            <summary>
            导出映射else设置
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportMapperElseAttribute.Display">
            <summary>
            显示值
            </summary>
        </member>
        <member name="M:ExcelHelper.ExportMapperElseAttribute.#ctor(System.String)">
            <summary>
            导出映射设置
            </summary>
            <param name="display">显示值</param>
        </member>
        <member name="T:ExcelHelper.ExportValidationsAttribute">
            <summary>
            单元格数据限制设置
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportValidationsAttribute.Validations">
            <summary>
            单元格限制设置
            </summary>
        </member>
        <member name="M:ExcelHelper.ExportValidationsAttribute.#ctor(System.String[])">
            <summary>
            单元格数据限制设置
            </summary>
        </member>
        <member name="T:ExcelHelper.ImageAttribute">
            <summary>
            图片
            </summary>
        </member>
        <member name="T:ExcelHelper.ImportHeaderAttribute">
            <summary>
            导入头设置
            </summary>
        </member>
        <member name="P:ExcelHelper.ImportHeaderAttribute.Name">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="M:ExcelHelper.ImportHeaderAttribute.#ctor(System.String)">
            <summary>
            导入头设置
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:ExcelHelper.ImportLimitAttribute">
            <summary>
            导入限制
            </summary>
        </member>
        <member name="M:ExcelHelper.ImportLimitAttribute.#ctor(System.Object[])">
            <summary>
            导入限制
            </summary>
            <param name="limits"></param>
        </member>
        <member name="P:ExcelHelper.ImportLimitAttribute.Limits">
            <summary>
            导入限制
            </summary>
        </member>
        <member name="P:ExcelHelper.ImportLimitAttribute.Message">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="T:ExcelHelper.ImportMapperAttribute">
            <summary>
            导入映射设置
            </summary>
        </member>
        <member name="P:ExcelHelper.ImportMapperAttribute.Display">
            <summary>
            显示值
            </summary>
        </member>
        <member name="P:ExcelHelper.ImportMapperAttribute.Actual">
            <summary>
            真实值
            </summary>
        </member>
        <member name="M:ExcelHelper.ImportMapperAttribute.#ctor(System.String,System.Object)">
            <summary>
            导入映射设置
            </summary>
            <param name="display">显示值</param>
            <param name="actual">真实值</param>
        </member>
        <member name="T:ExcelHelper.ImportMapperElseAttribute">
            <summary>
            导入映射else设置
            </summary>
        </member>
        <member name="P:ExcelHelper.ImportMapperElseAttribute.Actual">
            <summary>
            真实值
            </summary>
        </member>
        <member name="M:ExcelHelper.ImportMapperElseAttribute.#ctor(System.Object)">
            <summary>
            导入映射设置
            </summary>
            <param name="actual">真实值</param>
        </member>
        <member name="T:ExcelHelper.ImportRequiredAttribute">
            <summary>
            导入必须
            </summary>
        </member>
        <member name="P:ExcelHelper.ImportRequiredAttribute.Message">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="T:ExcelHelper.ImportTrimAttribute">
            <summary>
            导入时对字符串进行Trim
            </summary>
        </member>
        <member name="P:ExcelHelper.ImportTrimAttribute.Trim">
            <summary>
            字符串Trim
            </summary>
        </member>
        <member name="M:ExcelHelper.ImportTrimAttribute.#ctor(ExcelHelper.Trim)">
            <summary>
            导入时对字符串进行Trim
            </summary>
        </member>
        <member name="T:ExcelHelper.ImportUniqueAttribute">
            <summary>
            导入唯一限制
            </summary>
        </member>
        <member name="P:ExcelHelper.ImportUniqueAttribute.Message">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="T:ExcelHelper.ImportUniquesAttribute">
            <summary>
            导入唯一限制
            </summary>
        </member>
        <member name="P:ExcelHelper.ImportUniquesAttribute.Message">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="P:ExcelHelper.ImportUniquesAttribute.UniquePropertites">
            <summary>
            导入唯一限制联合属性
            </summary>
        </member>
        <member name="M:ExcelHelper.ImportUniquesAttribute.#ctor(System.String[])">
            <summary>
            导入唯一限制
            </summary>
        </member>
        <member name="T:ExcelHelper.TempAttribute">
            <summary>
            模板设置
            </summary>
        </member>
        <member name="M:ExcelHelper.TempAttribute.#ctor(System.String)">
            <summary>
            模板头设置
            </summary>
            <param name="cellAddress">单元格位置，如：<c>A11</c></param>
        </member>
        <member name="P:ExcelHelper.TempAttribute.CellAddress">
            <summary>
            单元格位置
            </summary>
        </member>
        <member name="P:ExcelHelper.TempAttribute.IsImage">
            <summary>
            是否是图片数据
            </summary>
        </member>
        <member name="P:ExcelHelper.TempAttribute.IsRequired">
            <summary>
            是否必须
            </summary>
        </member>
        <member name="P:ExcelHelper.TempAttribute.RequiredMessage">
            <summary>
            必须提示消息
            </summary>
        </member>
        <member name="P:ExcelHelper.TempAttribute.Trim">
            <summary>
            字符串Trim
            </summary>
        </member>
        <member name="T:ExcelHelper.TempListAttribute">
            <summary>
            模板列表数据设置
            </summary>
        </member>
        <member name="P:ExcelHelper.TempListAttribute.Type">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:ExcelHelper.TempListAttribute.StartIndex">
            <summary>
            开始位置
            </summary>
        </member>
        <member name="P:ExcelHelper.TempListAttribute.EndIndex">
            <summary>
            结束位置
            </summary>
        </member>
        <member name="M:ExcelHelper.TempListAttribute.#ctor(ExcelHelper.TempListType,System.Int32,System.Int32)">
            <summary>
            模板列表数据设置
            </summary>
            <param name="type">行列表/列列表</param>
            <param name="startIndex">数据开始坐标（包含）</param>
            <param name="endIndex">数据结束坐标（包含）</param>
        </member>
        <member name="T:ExcelHelper.TempListType">
            <summary>
            列表类型
            </summary>
        </member>
        <member name="F:ExcelHelper.TempListType.Row">
            <summary>
            行
            </summary>
        </member>
        <member name="F:ExcelHelper.TempListType.Column">
            <summary>
            列
            </summary>
        </member>
        <member name="T:ExcelHelper.TempListItemAttribute">
            <summary>
            模板列表数据位置
            </summary>
        </member>
        <member name="M:ExcelHelper.TempListItemAttribute.#ctor(System.Int32)">
            <summary>
            模板列表数据位置
            </summary>
            <param name="itemIndex">行/列 索引</param>
        </member>
        <member name="P:ExcelHelper.TempListItemAttribute.ItemIndex">
            <summary>
            模板列表数据位置
            </summary>
        </member>
        <member name="P:ExcelHelper.TempListItemAttribute.CellAddress">
            <summary>
            单元格位置
            </summary>
        </member>
        <member name="P:ExcelHelper.TempListItemAttribute.IsImage">
            <summary>
            是否是图片数据
            </summary>
        </member>
        <member name="P:ExcelHelper.TempListItemAttribute.IsRequired">
            <summary>
            是否必须
            </summary>
        </member>
        <member name="P:ExcelHelper.TempListItemAttribute.RequiredMessage">
            <summary>
            必须提示消息
            </summary>
        </member>
        <member name="P:ExcelHelper.TempListItemAttribute.Trim">
            <summary>
            字符串Trim
            </summary>
        </member>
        <member name="P:ExcelHelper.TempListItemAttribute.IsUnique">
            <summary>
            是否唯一
            </summary>
        </member>
        <member name="T:ExcelHelper.Trim">
            <summary>
            Trim类型
            </summary>
        </member>
        <member name="F:ExcelHelper.Trim.None">
            <summary>
            不做处理
            </summary>
        </member>
        <member name="F:ExcelHelper.Trim.All">
            <summary>
            处理两面
            </summary>
        </member>
        <member name="F:ExcelHelper.Trim.Start">
            <summary>
            处理前面
            </summary>
        </member>
        <member name="F:ExcelHelper.Trim.End">
            <summary>
            处理后面
            </summary>
        </member>
        <member name="T:ExcelHelper.BaseExcelReadHelper">
            <summary>
            Excel 帮助类基类
            </summary>
        </member>
        <member name="P:ExcelHelper.BaseExcelReadHelper.FileStream">
            <summary>
            Excel 文件流
            </summary>
        </member>
        <member name="M:ExcelHelper.BaseExcelReadHelper.#ctor(System.IO.Stream)">
            <summary>
            Excel 帮助类
            </summary>
            <param name="stream">Excel 文件流</param>
        </member>
        <member name="M:ExcelHelper.BaseExcelReadHelper.#ctor(System.Byte[])">
            <summary>
            Excel 帮助类
            </summary>
            <param name="fileBytes">Excel 文件字节数据</param>
        </member>
        <member name="M:ExcelHelper.BaseExcelReadHelper.#ctor(System.String)">
            <summary>
            Excel 帮助类
            </summary>
            <param name="filePath">Excel 文件路径</param>
        </member>
        <member name="M:ExcelHelper.BaseExcelReadHelper.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:ExcelHelper.BaseExcelReadHelper.GetAllSheets">
            <summary>
            获取所有Sheet信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelReadHelper.ImportSheet``1(System.String[])">
            <summary>
            导入 Sheet 信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sheetNames"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelReadHelper.ImportSheet``1(ExcelHelper.ImportSetting,System.String[])">
            <summary>
            导入 Sheet 信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="importSetting"></param>
            <param name="sheetNames"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelReadHelper.GetExcelSheet(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:ExcelHelper.BaseExcelTempHelper">
            <summary>
            Excel 帮助类基类
            </summary>
        </member>
        <member name="M:ExcelHelper.BaseExcelTempHelper.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:ExcelHelper.BaseExcelTempHelper.GetData``1(System.String,System.String,ExcelHelper.TempSetting)">
            <inheritdoc/>
        </member>
        <member name="M:ExcelHelper.BaseExcelTempHelper.SetData``1(System.String,``0,System.String,ExcelHelper.TempSetting)">
            <inheritdoc/>
        </member>
        <member name="M:ExcelHelper.BaseExcelTempHelper.GetExcelSheet(System.String,System.String)">
            <summary>
            获取指定Excel文件指定Sheet页信息
            </summary>
            <param name="filePath"></param>
            <param name="sheetName"></param>
            <returns></returns>
        </member>
        <member name="T:ExcelHelper.BaseExcelWriteHelper">
            <summary>
            Excel 帮助类基类
            </summary>
        </member>
        <member name="M:ExcelHelper.BaseExcelWriteHelper.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:ExcelHelper.BaseExcelWriteHelper.ExportSheet``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            导出 Sheet 数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sheetName"></param>
            <param name="datas"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelWriteHelper.ExportSheet``1(System.String,System.Collections.Generic.IEnumerable{``0},ExcelHelper.ExportSetting)">
            <summary>
            导出 Sheet 数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sheetName"></param>
            <param name="datas"></param>
            <param name="exportSetting"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelWriteHelper.SetSheetIndex(System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ExcelHelper.BaseExcelWriteHelper.ToBytes">
            <summary>
            转为 byte 数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelWriteHelper.CreateExcelSheet(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ExcelHelper.IExcelReadHelper">
            <summary>
            Excel 读取帮助类
            </summary>
        </member>
        <member name="P:ExcelHelper.IExcelReadHelper.FileStream">
            <summary>
            Excel 文件流
            </summary>
        </member>
        <member name="M:ExcelHelper.IExcelReadHelper.GetAllSheets">
            <summary>
            获取所有Sheet名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelReadHelper.ImportSheet``1(System.String[])">
            <summary>
            导入指定 Sheet 页的数据，如果指定多个 Sheet 页则依次匹配，返回第一个匹配到的 Sheet 页数据 <br/>
            如果没有指定名称，则解析第一个 sheet 页
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sheetNames"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelReadHelper.ImportSheet``1(ExcelHelper.ImportSetting,System.String[])">
            <summary>
            导入指定 Sheet 页的数据，如果指定多个 Sheet 页则依次匹配，返回第一个匹配到的 Sheet 页数据 <br/>
            如果没有指定名称，则解析第一个 sheet 页
            </summary>
            <typeparam name="T"></typeparam>
            <param name="importSetting"></param>
            <param name="sheetNames"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelReadHelper.GetExcelSheet(System.String[])">
            <summary>
            读取一个Sheet页，如果指定多个 Sheet 页则依次匹配，返回第一个匹配到的 Sheet 页数据 <br/>
            如果没有指定名称，则解析第一个 sheet 页
            </summary>
            <param name="sheetNames"></param>
            <returns></returns>
        </member>
        <member name="T:ExcelHelper.IExcelTempHelper">
            <summary>
            Excel 模板操作类
            </summary>
        </member>
        <member name="M:ExcelHelper.IExcelTempHelper.GetData``1(System.String,System.String,ExcelHelper.TempSetting)">
            <summary>
            获取模板数据
            </summary>
            <typeparam name="T">输出模型</typeparam>
            <param name="filePath">文件路径</param>
            <param name="sheetName">sheet页名称，默认第一个sheet页</param>
            <param name="tempSetting">模板设置</param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelTempHelper.SetData``1(System.String,``0,System.String,ExcelHelper.TempSetting)">
            <summary>
            设置模板数据
            </summary>
            <typeparam name="T">数据对象模型</typeparam>
            <param name="tempPath">模板文件路径</param>
            <param name="data">数据</param>
            <param name="sheetName">sheet页名称，默认第一个sheet页</param>
            <param name="tempSetting">模板设置</param>
            <returns></returns>
        </member>
        <member name="T:ExcelHelper.IExcelWriteHelper">
            <summary>
            Excel 写入帮助类
            </summary>
        </member>
        <member name="M:ExcelHelper.IExcelWriteHelper.ExportSheet``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            导出数据
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelWriteHelper.ExportSheet``1(System.String,System.Collections.Generic.IEnumerable{``0},ExcelHelper.ExportSetting)">
            <summary>
            导出数据
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelWriteHelper.SetSheetIndex(System.String,System.Int32)">
            <summary>
            设置Sheet的位置
            </summary>
            <param name="sheetName"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelWriteHelper.ToBytes">
            <summary>
            保存为字节数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelWriteHelper.CreateExcelSheet(System.String)">
            <summary>
            创建一个Sheet页
            </summary>
            <param name="sheetName"></param>
            <returns></returns>
        </member>
        <member name="T:ExcelHelper.BaseExcelSheet">
            <summary>
            Excel Sheet 基础操作实现
            </summary>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.GetRowCount">
            <summary>
            获取总行数
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.GetColumnCount(System.Int32)">
            <summary>
            获取指定行的列数
            </summary>
            <param name="rowIndex"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.ToBytes">
            <summary>
            生成字节数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.GetImage(System.Int32,System.Int32)">
            <summary>
            获取指定位置的图片数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.GetImage(System.String)">
            <summary>
            获取指定位置的图片数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.GetValue(System.Int32,System.Int32)">
            <summary>
            获取指定位置的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.GetValue(System.String)">
            <summary>
            获取指定位置的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.SetValue(System.Int32,System.Int32,System.Object)">
            <summary>
            设置指定位置的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.SetValue(System.String,System.Object)">
            <summary>
            设置指定位置的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.SetImage(System.Int32,System.Int32,System.Byte[])">
            <summary>
            设置指定位置的图片数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.SetImage(System.String,System.Byte[])">
            <summary>
            设置指定位置的图片数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.SetComment(System.Int32,System.Int32,System.String)">
            <summary>
            设置指定位置的备注信息
            </summary>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.SetFormat(System.Int32,System.Int32,System.String)">
            <summary>
            设置指定位置的格式化字符串
            </summary>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.SetAutoSizeColumn(System.Int32)">
            <summary>
            设置指定列自动调整宽度
            </summary>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.SetColumnWidth(System.Int32,System.Int32)">
            <summary>
            设置指定列的宽度
            </summary>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.SetFont(System.Int32,System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            设置指定位置的字体
            </summary>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.SetValidationData(System.Int32,System.Int32,System.Int32,System.Int32,System.String[])">
            <summary>
            设置验证数据
            </summary>
            <param name="firstRowIndex"></param>
            <param name="lastRowIndex"></param>
            <param name="firstColIndex"></param>
            <param name="lastColIndex"></param>
            <param name="explicitListValues"></param>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.AppendData``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.AppendData``1(System.Collections.Generic.IEnumerable{``0},ExcelHelper.ExportSetting)">
            <inheritdoc/>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.AppendEmptyRow">
            <inheritdoc/>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.GetData``1(ExcelHelper.ImportSetting)">
            <inheritdoc/>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.GetTempData``1(ExcelHelper.TempSetting)">
            <inheritdoc/>
        </member>
        <member name="M:ExcelHelper.BaseExcelSheet.SetTempData``1(``0,ExcelHelper.TempSetting)">
            <inheritdoc/>
        </member>
        <member name="T:ExcelHelper.IExcelSheet">
            <summary>
            Excel Sheet
            </summary>
        </member>
        <member name="M:ExcelHelper.IExcelSheet.AppendData``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            追加数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="datas"></param>
            <param name="addTitle"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelSheet.AppendData``1(System.Collections.Generic.IEnumerable{``0},ExcelHelper.ExportSetting)">
            <summary>
            追加数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="datas"></param>
            <param name="exportSetting"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelSheet.AppendEmptyRow">
            <summary>
            追加空行
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelSheet.GetData``1(ExcelHelper.ImportSetting)">
            <summary>
            获取数据
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelSheet.GetRowCount">
            <summary>
            获取总行数
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelSheet.ToBytes">
            <summary>
            保存为字节数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelSheet.GetTempData``1(ExcelHelper.TempSetting)">
            <summary>
            获取模板数据
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.IExcelSheet.SetTempData``1(``0,ExcelHelper.TempSetting)">
            <summary>
            设置模板数据
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:ExcelHelper.ExcelHelperException">
            <summary>
            ExcelHelper异常
            </summary>
        </member>
        <member name="M:ExcelHelper.ExcelHelperException.#ctor(System.String)">
            <summary>
             ExcelHelper异常
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:ExcelHelper.ExportException">
            <summary>
            导出异常
            </summary>
        </member>
        <member name="M:ExcelHelper.ExportException.#ctor(System.String)">
            <summary>
            导出异常
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ExcelHelper.ExportException.New(System.String)">
            <summary>
            创建一个导出异常
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:ExcelHelper.ImportException">
            <summary>
            导入异常
            </summary>
        </member>
        <member name="M:ExcelHelper.ImportException.#ctor(System.String)">
            <summary>
            导入异常
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ExcelHelper.ImportException.New(System.String)">
            <summary>
            创建一个导入异常
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:ExcelHelper.ExcelObjectInfo">
            <summary>
            Excel对象信息
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelObjectInfo.ObjectType">
            <summary>
            对象类型
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelObjectInfo.ImportUniquesAttributes">
            <summary>
            导入唯一限制
            </summary>
        </member>
        <member name="M:ExcelHelper.ExcelObjectInfo.#ctor(System.Type)">
            <summary>
            Excel 对象信息
            </summary>
            <param name="objectType"></param>
        </member>
        <member name="F:ExcelHelper.ExcelObjectInfo.uniqueDict">
            <summary>
            唯一判断字典
            </summary>
        </member>
        <member name="M:ExcelHelper.ExcelObjectInfo.CheckImportUnique``1(``0,ExcelHelper.ImportSetting)">
            <summary>
            检查导入唯一性限制
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <param name="importSetting"></param>
            <exception cref="T:ExcelHelper.ImportException"></exception>
        </member>
        <member name="T:ExcelHelper.ExcelPropertyInfo">
            <summary>
            Excel 属性信息
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.PropertyInfo">
            <summary>
            字段属性信息
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.IsArray">
            <summary>
            是否是数组
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportHeaderTitle">
            <summary>
            导入头标题
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportHeaderColumnIndex">
            <summary>
            导入标题所在列索引,执行<see cref="M:ExcelHelper.ExcelPropertyInfo.SetImportHeaderColumnIndex(System.Collections.Generic.Dictionary{System.String,System.Int32})"/>之后有效
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportUnique">
            <summary>
            导入唯一性限制
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportUniqueMessage">
            <summary>
            导入唯一性限制提示信息
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportRequired">
            <summary>
            导入数据必须
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportRequiredMessage">
            <summary>
            导入数据必须提示信息
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportLimitValues">
            <summary>
            导入限制
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportLimitMessage">
            <summary>
            导入限制提示信息
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportTrimValue">
            <summary>
            导入值Trim
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ExportHeaderTitle">
            <summary>
            导出头标题
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ExportHeaderComment">
            <summary>
            导出头备注
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ExportIgnore">
            <summary>
            导出忽略
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.HasTempInfo">
            <summary>
            是否设置了模板配置信息
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.HasTempItemInfo">
            <summary>
            是否设置了列表模板项配置信息
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.TempCellAddress">
            <summary>
            模板字段位置
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.TempListType">
            <summary>
            模板列表类型
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.TempListStartIndex">
            <summary>
            模板数据开始
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.TempListEndIndex">
            <summary>
            模板数据结束
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.TempListItemIndex">
            <summary>
            模板列表数据位置
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.Children">
            <summary>
            子属性字段信息
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImageAttribute">
            <summary>
            图片属性
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportHeaderAttributes">
            <summary>
            导入头
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportMapperAttributes">
            <summary>
            导入映射
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportMapperElseAttribute">
            <summary>
            导入映射else
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportLimitAttribute">
            <summary>
            导入限制
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportRequiredAttribute">
            <summary>
            导入必须
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportTrimAttribute">
            <summary>
            导入数据Trim
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ImportUniqueAttribute">
            <summary>
            导入唯一限制
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ExportHeaderAttribute">
            <summary>
            导出头
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ExportValidationsAttribute">
            <summary>
            导出单元格验证
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ExportMapperAttributes">
            <summary>
            导出映射
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ExportMapperElseAttribute">
            <summary>
            导出映射else
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ExportIgnoreAttribute">
            <summary>
            忽略导出，如果为null则导出，不为null则不导出
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.ExportFormatAttribute">
            <summary>
            导出格式化
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.TempAttribute">
            <summary>
            模板头
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.TempListAttribute">
            <summary>
            模板头-列表数据
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelPropertyInfo.TempListItemAttribute">
            <summary>
            模板头-列表数据项
            </summary>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Excel 属性信息
            </summary>
            <param name="propertyInfo"></param>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.SetImportInfo">
            <summary>
            设置导入信息
            </summary>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.SetExportInfo">
            <summary>
            获取导出头标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.SetTempInfo">
            <summary>
            设置模板信息
            </summary>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.IsImage">
            <summary>
            是否是图片
            </summary>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.ExportMappedToDisplay(System.Object)">
            <summary>
            将导出实际值映射为显示数据
            </summary>
            <param name="actual">实际值</param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.ExportMappedToElseDisplay(System.Object)">
            <summary>
            导出映射else
            </summary>
            <param name="actual"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.UpdateByExportSetting(ExcelHelper.ExportSetting)">
            <summary>
            更新导出信息，
            动态设置会覆盖模型静态配置
            </summary>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.IsExportIgnore">
            <summary>
            是否导出时忽略当前属性
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.ImportMappedToActual(System.Object)">
            <summary>
            将显示值映射为实际值
            </summary>
            <param name="display">显示值</param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.IsImportRequired">
            <summary>
            是否必须
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.IsImportUnqiue">
            <summary>
            是否唯一
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.ImportCheckLimitValue(System.Object)">
            <summary>
            检查导入限制
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.ImportCheckRequired(System.Object)">
            <summary>
            检查必须,如果设置了必须且没有数据则报错
            </summary>
            <returns></returns>
        </member>
        <member name="F:ExcelHelper.ExcelPropertyInfo.importUnqiueCheckSet">
            <summary>
            导入检查字典
            </summary>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.ImportCheckUnqiue(System.Object)">
            <summary>
            导入检查唯一性
            </summary>
            <param name="actualValue">导入的数据</param>
            <exception cref="T:ExcelHelper.ImportException"></exception>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.ImportTrim(System.Object@)">
            <summary>
            移除前后空字符串
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.UpdateByBaseImportSetting(ExcelHelper.BaseImportSetting)">
            <summary>
            更新导入信息
            </summary>
            <param name="baseImportSetting"></param>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.UpdateByImportSetting(ExcelHelper.ImportSetting)">
            <summary>
            更新导入信息
            </summary>
            <param name="importSetting"></param>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.SetImportHeaderColumnIndex(System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            设置导入头列索引
            </summary>
            <param name="titleIndexDict"></param>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.UpdateByTempSetting(ExcelHelper.TempSetting)">
            <summary>
            更新模板信息，
            动态设置会覆盖模型静态配置
            </summary>
        </member>
        <member name="M:ExcelHelper.ExcelPropertyInfo.TrimTempChildren">
            <summary>
            裁剪掉没有设置模板配置的子项
            </summary>
        </member>
        <member name="T:ExcelHelper.ExcelSheetInfo">
            <summary>
            Excel Sheet 页信息
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelSheetInfo.Name">
            <summary>
            Sheet 名称
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelSheetInfo.Index">
            <summary>
            Sheet 位置
            </summary>
        </member>
        <member name="P:ExcelHelper.ExcelSheetInfo.IsHidden">
            <summary>
            是否隐藏
            </summary>
        </member>
        <member name="M:ExcelHelper.ExcelSheetInfo.#ctor(System.Int32,System.String,System.Boolean)">
            <summary>
            Sheet 页信息
            </summary>
            <param name="index"></param>
            <param name="name"></param>
            <param name="isHidden"></param>
        </member>
        <member name="T:ExcelHelper.PropertyInfoExtensions">
            <summary>
            属性信息扩展方法
            </summary>
        </member>
        <member name="M:ExcelHelper.PropertyInfoExtensions.GetExcelObjectInfo(System.Type)">
            <summary>
            获取Excel对象
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.PropertyInfoExtensions.GetExcelPropertyInfo(System.Reflection.PropertyInfo)">
            <summary>
            获取Excel属性对象
            </summary>
            <param name="propertyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.PropertyInfoExtensions.GetImportExcelPropertyInfoList(System.Type,System.Collections.Generic.Dictionary{System.String,System.Int32},ExcelHelper.ImportSetting)">
            <summary>
            获取导入模型属性信息列表
            </summary>
            <param name="type"></param>
            <param name="titleIndexDict"></param>
            <param name="importSetting"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.PropertyInfoExtensions.SetValueAuto(System.Reflection.PropertyInfo,System.Object,System.Object)">
            <summary>
            设置值，自动转换类型
            </summary>
            <param name="propertyInfo"></param>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:ExcelHelper.PropertyInfoExtensions.GetExportExcelPropertyInfoList(System.Type,ExcelHelper.ExportSetting)">
            <summary>
            获取导出模型属性信息列表
            </summary>
            <param name="type"></param>
            <param name="exportSetting"></param>
            <returns></returns>
        </member>
        <member name="M:ExcelHelper.PropertyInfoExtensions.GetTempExcelPropertyInfoList(System.Type,ExcelHelper.TempSetting)">
            <summary>
            获取模板模型属性信息列表
            </summary>
            <param name="type"></param>
            <param name="tempSetting"></param>
            <returns></returns>
        </member>
        <member name="T:ExcelHelper.BaseImportSetting">
            <summary>
            基础导入设置
            </summary>
        </member>
        <member name="P:ExcelHelper.BaseImportSetting.LimitValues">
            <summary>
            导入值限制 (<c>nameof(A)</c>, <c>value list</c>)
            <para><c>nameof(A)</c> : 对象的指定属性A的名称</para>
            <para><c>value list</c> : 值列表</para>
            </summary>
        </member>
        <member name="P:ExcelHelper.BaseImportSetting.LimitMessage">
            <summary>
            导入限制提示
            </summary>
        </member>
        <member name="P:ExcelHelper.BaseImportSetting.ValueTrim">
            <summary>
            值Trim
            </summary>
        </member>
        <member name="P:ExcelHelper.BaseImportSetting.RequiredProperties">
            <summary>
            必须有数据的属性
            </summary>
        </member>
        <member name="P:ExcelHelper.BaseImportSetting.RequiredMessage">
            <summary>
            导入必须提示
            </summary>
        </member>
        <member name="P:ExcelHelper.BaseImportSetting.UniqueProperties">
            <summary>
            唯一性验证的属性
            </summary>
        </member>
        <member name="P:ExcelHelper.BaseImportSetting.UniqueMessage">
            <summary>
            导入唯一性验证提示
            </summary>
        </member>
        <member name="P:ExcelHelper.BaseImportSetting.ImportUniquesAttributes">
            <summary>
            导入唯一限制
            </summary>
        </member>
        <member name="M:ExcelHelper.BaseImportSetting.AddLimitValues(System.String,System.Object[])">
            <summary>
            添加限制值清单
            </summary>
            <param name="propertyName">对象属性名称</param>
            <param name="values">导入数据限制列表</param>
        </member>
        <member name="M:ExcelHelper.BaseImportSetting.AddLimitMessage(System.String,System.String)">
            <summary>
            添加限制值提示信息
            </summary>
            <param name="propertyName">对象属性名称</param>
            <param name="message">提示信息</param>
        </member>
        <member name="M:ExcelHelper.BaseImportSetting.AddValueTrim(System.String,ExcelHelper.Trim)">
            <summary>
            添加数据值Trim
            </summary>
            <param name="propertyName">对象属性名称</param>
            <param name="trim">数据Trim方式</param>
        </member>
        <member name="M:ExcelHelper.BaseImportSetting.AddRequiredProperties(System.String[])">
            <summary>
            添加必填属性
            </summary>
            <param name="propertyNames">对象属性名称</param>
        </member>
        <member name="M:ExcelHelper.BaseImportSetting.AddRequiredMessage(System.String,System.String)">
            <summary>
            添加必填提示信息
            </summary>
            <param name="propertyName">对象属性名称</param>
            <param name="message">提示信息</param>
        </member>
        <member name="M:ExcelHelper.BaseImportSetting.AddUniqueProperties(System.String[])">
            <summary>
            添加唯一属性
            </summary>
            <param name="propertyNames">对象属性名称</param>
        </member>
        <member name="M:ExcelHelper.BaseImportSetting.AddUniqueMessage(System.String,System.String)">
            <summary>
            添加唯一性提示信息
            </summary>
            <param name="propertyName">对象属性名称</param>
            <param name="message">提示信息</param>
        </member>
        <member name="M:ExcelHelper.BaseImportSetting.AddUniquesAttribute(ExcelHelper.ImportUniquesAttribute)">
            <summary>
            添加导入数据唯一限制（针对列表对象，多字段唯一）
            </summary>
            <param name="importUniquesAttribute"></param>
        </member>
        <member name="T:ExcelHelper.ExportSetting">
            <summary>
            导出配置
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportSetting.AddTitle">
            <summary>
            是否添加列标题
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportSetting.TitleMapping">
            <summary>
            导出头映射 (<c>nameof(A)</c>, <c>title</c>)
            <para><c>nameof(A)</c> : 对象的指定属性A的名称</para>
            <para><c>title</c> : Excel列标题</para>
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportSetting.TitleComment">
            <summary>
            标题备注 (<c>nameof(A)</c>, <c>comment</c>)
            <para><c>nameof(A)</c> : 对象的指定属性A的名称</para>
            <para><c>comment</c> : Excel列标题上的备注</para>
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportSetting.IgnoreProperties">
            <summary>
            要忽略的属性
            </summary>
        </member>
        <member name="P:ExcelHelper.ExportSetting.IncludeProperties">
            <summary>
            要添加的属性
            </summary>
        </member>
        <member name="M:ExcelHelper.ExportSetting.AddTitleMapping(System.String,System.String)">
            <summary>
            添加属性与excel头映射
            </summary>
            <param name="propertyName">对象属性名称</param>
            <param name="title">excel中列标题</param>
        </member>
        <member name="M:ExcelHelper.ExportSetting.AddTitleComment(System.String,System.String)">
            <summary>
            添加excel标题备注信息
            </summary>
            <param name="propertyName">对象属性名称</param>
            <param name="comment">excel标题备注信息</param>
        </member>
        <member name="M:ExcelHelper.ExportSetting.AddIgnoreProperties(System.String[])">
            <summary>
            添加导出时要忽略的属性
            </summary>
            <param name="propertyNames">对象属性名称</param>
        </member>
        <member name="M:ExcelHelper.ExportSetting.AddIncludeProperties(System.String[])">
            <summary>
            指定导出时要导出的属性
            </summary>
            <param name="propertyNames">对象属性名称</param>
        </member>
        <member name="T:ExcelHelper.ImportSetting">
            <summary>
            导入配置
            </summary>
        </member>
        <member name="P:ExcelHelper.ImportSetting.TitleMapping">
            <summary>
            导入头映射 (<c>nameof(A)</c>, <c>title</c>)
            <para><c>nameof(A)</c> : 对象的指定属性A的名称</para>
            <para><c>title</c> : Excel列标题</para>
            </summary>
        </member>
        <member name="M:ExcelHelper.ImportSetting.AddTitleMapping(System.String,System.String)">
            <summary>
            添加属性与excel头映射
            </summary>
            <param name="propertyName">对象属性名称</param>
            <param name="title">excel中列标题</param>
        </member>
        <member name="T:ExcelHelper.TempSetting">
            <summary>
            模板配置
            </summary>
        </member>
        <member name="P:ExcelHelper.TempSetting.CellAddress">
            <summary>
            属性单元格位置 (<c>nameof(A)</c>, <c>cellAddress</c>)
            <para><c>nameof(A)</c> : 对象的指定属性A的名称</para>
            <para><c>cellAddress</c> : Excel中单元格位置</para>
            </summary>
        </member>
        <member name="P:ExcelHelper.TempSetting.ListSettings">
            <summary>
            列表属性 (<c>nameof(A)</c>, <see cref="T:ExcelHelper.TempListSetting"/>)
            <para><c>nameof(A)</c> : 对象的指定属性A的名称</para>
            <para><see cref="T:ExcelHelper.TempListSetting"/> : 模板列表设置</para>
            </summary>
        </member>
        <member name="M:ExcelHelper.TempSetting.AddCellAddress(System.String,System.String)">
            <summary>
            添加属性单元格位置
            </summary>
            <param name="propertyName">对象属性名称</param>
            <param name="cellAddress">Excel中单元格位置</param>
        </member>
        <member name="M:ExcelHelper.TempSetting.AddTempListSetting(System.String,ExcelHelper.TempListType,System.Int32,System.Int32)">
            <summary>
            添加列表属性设置
            </summary>
            <param name="propertyName">对象属性名称</param>
            <param name="type">行列表/列列表</param>
            <param name="startIndex">数据开始坐标（包含）</param>
            <param name="endIndex">数据结束坐标（包含）</param>
        </member>
        <member name="T:ExcelHelper.TempListSetting">
            <summary>
            模板列表设置
            </summary>
        </member>
        <member name="P:ExcelHelper.TempListSetting.Type">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:ExcelHelper.TempListSetting.StartIndex">
            <summary>
            开始位置
            </summary>
        </member>
        <member name="P:ExcelHelper.TempListSetting.EndIndex">
            <summary>
            结束位置
            </summary>
        </member>
        <member name="P:ExcelHelper.TempListSetting.ItemIndexs">
            <summary>
            列表数据位置 (<c>nameof(A)</c>, <c>itemIndex</c>)
            <para><c>nameof(A)</c> : 对象的指定属性A的名称</para>
            <para><c>itemIndex</c> : 列表数据位置</para>
            </summary>
        </member>
        <member name="M:ExcelHelper.TempListSetting.AddItemIndex(System.String,System.Int32)">
            <summary>
            添加列表数据位置
            </summary>
            <param name="propertyName">对象属性名称</param>
            <param name="itemIndex">列表数据位置</param>
        </member>
    </members>
</doc>
